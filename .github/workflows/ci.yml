name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8 (if available)
      run: |
        pip install flake8 || echo "flake8 not available, skipping lint"
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "No critical errors found"
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics || echo "Lint warnings found"

    - name: Type check with mypy (if available)
      run: |
        pip install mypy || echo "mypy not available, skipping type check"
        mypy . --ignore-missing-imports || echo "Type check completed with warnings"

    - name: Test import and basic functionality (Linux with Xvfb)
      if: matrix.os == 'ubuntu-latest'
      run: |
        xvfb-run -a python -c "
        import sys
        sys.path.insert(0, '.')
        
        # Test imports
        try:
            import pygame
            import swarm_tank
            import swarm_bot
            import entities
            import roles
            import vector2d
            print('All imports successful')
        except ImportError as e:
            print(f'Import error: {e}')
            sys.exit(1)
        
        # Test basic functionality
        try:
            pygame.init()
            pygame.display.set_mode((800, 600))
            print('Pygame initialization successful')
            pygame.quit()
        except Exception as e:
            print(f'Pygame test error: {e}')
            sys.exit(1)
        "

    - name: Test import and basic functionality (Windows/macOS)
      if: matrix.os != 'ubuntu-latest'
      run: |
        python -c "
        import sys
        sys.path.insert(0, '.')
        
        # Test imports
        try:
            import pygame
            import swarm_tank
            import swarm_bot
            import entities
            import roles
            import vector2d
            print('All imports successful')
        except ImportError as e:
            print(f'Import error: {e}')
            sys.exit(1)
        
        print('Basic import tests passed')
        "

    - name: Test Vector2D mathematics
      run: |
        python -c "
        import sys
        sys.path.insert(0, '.')
        from vector2d import Vector2D
        
        # Test vector operations
        v1 = Vector2D(3, 4)
        v2 = Vector2D(1, 2)
        
        assert abs(v1.magnitude() - 5.0) < 0.001, 'Magnitude test failed'
        assert v1.dot(v2) == 11, 'Dot product test failed'
        
        v3 = v1 + v2
        assert v3.x == 4 and v3.y == 6, 'Addition test failed'
        
        print('Vector2D tests passed')
        "

  style-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install style checking tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort

    - name: Check code formatting with black
      run: |
        black --check --diff . || echo "Code formatting issues found. Run 'black .' to fix."

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff . || echo "Import sorting issues found. Run 'isort .' to fix."
